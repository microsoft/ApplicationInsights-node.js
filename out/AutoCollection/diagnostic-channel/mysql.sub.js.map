{"version":3,"file":"mysql.sub.js","sourceRoot":"","sources":["../../../AutoCollection/diagnostic-channel/mysql.sub.ts"],"names":[],"mappings":";;;AAGA,0DAAwE;AACxE,yDAAuE;AAIvE,IAAI,OAAO,GAAsB,EAAE,CAAC;AAE7B,IAAM,UAAU,GAAG,UAAC,KAAuC;IAC9D,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;QACnB,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACxC,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,IAAI,eAAe,CAAC;QAClD,IAAM,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;QAEhC,IAAM,UAAU,GAAG,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;QAC9C,IAAM,gBAAgB,GAAG,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC;QACjD,IAAM,MAAM,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAG,gBAAgB,CAAC,IAAI,IAAI,WAAW,UAAI,gBAAgB,CAAC,IAAM,CAAC;QAC9I,MAAM,CAAC,eAAe,CAClB;YACI,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ;YAC7B,OAAO,EAAE,OAAO;YAChB,2CAA2C;YAC3C,UAAU,EAAE,OAAO,CAAA,CAAC,CAAC,GAAG,CAAA,CAAC,CAAC,GAAG;YAC7B,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI;YACrB,kBAAkB,EAAE,OAAO;SAC9B,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAtBW,QAAA,UAAU,cAsBrB;AAEF,SAAgB,MAAM,CAAC,OAAgB,EAAE,MAAuB;IAC5D,IAAI,OAAO,EAAE;QACT,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,MAAM,EAAX,CAAW,CAAC,CAAC;QACjD,IAAI,WAAW,EAAE;YACb,OAAO;SACV;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,4BAAO,CAAC,SAAS,CAAmB,OAAO,EAAE,kBAAU,EAAE,+BAAU,EAAE,UAAC,MAAM,EAAE,OAAO;gBACjF,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;gBACtC,IAAI,SAAS,EAAE;oBACX,SAAS,CAAC,kBAAkB,CAAC,oCAAwB,CAAC,KAAK,CAAC,CAAC;iBAChE;YACL,CAAC,CAAC,CAAC;SACN;QACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxB;SAAM;QACH,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,IAAI,MAAM,EAAX,CAAW,CAAC,CAAC;QAC7C,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,4BAAO,CAAC,WAAW,CAAC,OAAO,EAAE,kBAAU,CAAC,CAAC;SAC5C;KACJ;AACL,CAAC;AArBD,wBAqBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nimport TelemetryClient = require(\"../../Library/TelemetryClient\");\r\nimport { StatsbeatInstrumentation } from \"../../Declarations/Constants\";\r\nimport {channel, IStandardEvent, trueFilter} from \"diagnostic-channel\";\r\n\r\nimport {mysql} from \"diagnostic-channel-publishers\";\r\n\r\nlet clients: TelemetryClient[] = [];\r\n\r\nexport const subscriber = (event: IStandardEvent<mysql.IMysqlData>) => {\r\n    clients.forEach((client) => {\r\n        const queryObj = event.data.query || {};\r\n        const sqlString = queryObj.sql || \"Unknown query\";\r\n        const success = !event.data.err;\r\n\r\n        const connection = queryObj._connection || {};\r\n        const connectionConfig = connection.config || {};\r\n        const dbName = connectionConfig.socketPath ? connectionConfig.socketPath : `${connectionConfig.host || \"localhost\"}:${connectionConfig.port}`;\r\n        client.trackDependency(\r\n            {\r\n                target: dbName,\r\n                data: sqlString,\r\n                name: sqlString,\r\n                duration: event.data.duration,\r\n                success: success,\r\n                /* TODO: transmit result code from mysql */\r\n                resultCode: success? \"0\": \"1\",\r\n                time: event.data.time,\r\n                dependencyTypeName: \"mysql\"\r\n            });\r\n    });\r\n};\r\n\r\nexport function enable(enabled: boolean, client: TelemetryClient) {\r\n    if (enabled) {\r\n        let clientFound = clients.find(c => c == client);\r\n        if (clientFound) {\r\n            return;\r\n        }\r\n        if (clients.length === 0) {\r\n            channel.subscribe<mysql.IMysqlData>(\"mysql\", subscriber, trueFilter, (module, version) => {\r\n                let statsbeat = client.getStatsbeat();\r\n                if (statsbeat) {\r\n                    statsbeat.addInstrumentation(StatsbeatInstrumentation.MYSQL);\r\n                }\r\n            });\r\n        }\r\n        clients.push(client);\r\n    } else {\r\n        clients = clients.filter((c) => c != client);\r\n        if (clients.length === 0) {\r\n            channel.unsubscribe(\"mysql\", subscriber);\r\n        }\r\n    }\r\n}\r\n"]}