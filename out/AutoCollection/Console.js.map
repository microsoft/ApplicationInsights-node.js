{"version":3,"file":"Console.js","sourceRoot":"","sources":["../../AutoCollection/Console.ts"],"names":[],"mappings":";AAEA,iEAAmE;AAEnE;IASI,4BAAY,MAAuB;QAC/B,IAAG,CAAC,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;SAChH;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvC,CAAC;IAEM,mCAAM,GAAb,UAAc,SAAkB,EAAE,iBAA0B;QACxD,IAAI,WAAW,CAAC,aAAa,EAAE;YAC3B,OAAO,CAAC,kCAAkC,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACjG,OAAO,CAAC,iCAAiC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3E,OAAO,CAAC,kCAAkC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/E;IACL,CAAC;IAEM,0CAAa,GAApB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAEM,oCAAO,GAAd;QACI,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC;IA7Bc,+BAAY,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IA8B5E,yBAAC;CAAA,AAlCD,IAkCC;AAED,iBAAS,kBAAkB,CAAC","sourcesContent":["import TelemetryClient = require(\"../Library/TelemetryClient\");\n\nimport * as DiagChannel from \"./diagnostic-channel/initialization\";\n\nclass AutoCollectConsole {\n    public static originalMethods: {[name: string]: (message?: any, ...optionalParams: any[]) => void};\n\n    public static INSTANCE: AutoCollectConsole;\n    private static _methodNames = [\"debug\", \"info\", \"log\", \"warn\", \"error\"];\n\n    private _client: TelemetryClient;\n    private _isInitialized: boolean;\n\n    constructor(client: TelemetryClient) {\n        if(!!AutoCollectConsole.INSTANCE) {\n            throw new Error(\"Console logging adapter tracking should be configured from the applicationInsights object\");\n        }\n\n        this._client = client;\n        AutoCollectConsole.INSTANCE = this;\n    }\n\n    public enable(isEnabled: boolean, collectConsoleLog: boolean) {\n        if (DiagChannel.IsInitialized) {\n            require(\"./diagnostic-channel/console.sub\").enable(isEnabled && collectConsoleLog, this._client);\n            require(\"./diagnostic-channel/bunyan.sub\").enable(isEnabled, this._client);\n            require(\"./diagnostic-channel/winston.sub\").enable(isEnabled, this._client);\n        }\n    }\n\n    public isInitialized() {\n        return this._isInitialized;\n    }\n\n    public dispose() {\n        AutoCollectConsole.INSTANCE = null;\n        this.enable(false, false);\n    }\n}\n\nexport = AutoCollectConsole;\n"]}