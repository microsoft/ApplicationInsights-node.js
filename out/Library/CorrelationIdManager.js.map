{"version":3,"file":"CorrelationIdManager.js","sourceRoot":"","sources":["../../Library/CorrelationIdManager.ts"],"names":[],"mappings":"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","sourcesContent":["import Util = require(\"./Util\");\r\nimport Config = require(\"./Config\");\r\n\r\nclass CorrelationIdManager {\r\n    public static correlationIdPrefix = \"cid-v1:\";\r\n    public static w3cEnabled = true;\r\n    public static HTTP_TIMEOUT: number = 2500; // 2.5 seconds\r\n\r\n\r\n    private static requestIdMaxLength = 1024;\r\n    private static currentRootId = Util.randomu32();\r\n\r\n    public static queryCorrelationId(config: Config, callback: (correlationId: string) => void) {\r\n        // No Op, App ID Exchange not required in SDK anymore\r\n    }\r\n\r\n    public static cancelCorrelationIdQuery(config: Config, callback: (correlationId: string) => void) {\r\n        // No Op, App ID Exchange not required in SDK anymore\r\n    }\r\n\r\n    /**\r\n     * Generate a request Id according to https://github.com/lmolkova/correlation/blob/master/hierarchical_request_id.md\r\n     * @param parentId\r\n     */\r\n    public static generateRequestId(parentId: string): string {\r\n        if (parentId) {\r\n            parentId = parentId[0] == \"|\" ? parentId : \"|\" + parentId;\r\n            if (parentId[parentId.length - 1] !== \".\") {\r\n                parentId += \".\";\r\n            }\r\n\r\n            const suffix = (CorrelationIdManager.currentRootId++).toString(16);\r\n\r\n            return CorrelationIdManager.appendSuffix(parentId, suffix, \"_\")\r\n        } else {\r\n            return CorrelationIdManager.generateRootId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Given a hierarchical identifier of the form |X.*\r\n     * return the root identifier X\r\n     * @param id\r\n     */\r\n    public static getRootId(id: string): string {\r\n        let endIndex = id.indexOf(\".\");\r\n        if (endIndex < 0) {\r\n            endIndex = id.length;\r\n        }\r\n\r\n        const startIndex = id[0] === \"|\" ? 1 : 0;\r\n        return id.substring(startIndex, endIndex);\r\n    }\r\n\r\n    private static generateRootId(): string {\r\n        return \"|\" + Util.w3cTraceId() + \".\";\r\n    }\r\n\r\n    private static appendSuffix(parentId: string, suffix: string, delimiter: string): string {\r\n        if (parentId.length + suffix.length < CorrelationIdManager.requestIdMaxLength) {\r\n            return parentId + suffix + delimiter;\r\n        }\r\n\r\n        // Combined identifier would be too long, so we must truncate it.\r\n        // We need 9 characters of space: 8 for the overflow ID, 1 for the\r\n        // overflow delimiter '#'\r\n        let trimPosition = CorrelationIdManager.requestIdMaxLength - 9;\r\n        if (parentId.length > trimPosition) {\r\n            for (; trimPosition > 1; --trimPosition) {\r\n                const c = parentId[trimPosition - 1];\r\n                if (c === \".\" || c === \"_\") {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (trimPosition <= 1) {\r\n            // parentId is not a valid ID\r\n            return CorrelationIdManager.generateRootId();\r\n        }\r\n\r\n        suffix = Util.randomu32().toString(16);\r\n        while (suffix.length < 8) {\r\n            suffix = \"0\" + suffix;\r\n        }\r\n        return parentId.substring(0, trimPosition) + suffix + \"#\";\r\n    }\r\n}\r\n\r\nexport = CorrelationIdManager;\r\n"]}