{"version":3,"file":"JsonConfig.js","sourceRoot":"","sources":["../../Library/JsonConfig.ts"],"names":[],"mappings":"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","sourcesContent":["import fs = require(\"fs\");\nimport path = require(\"path\");\n\nimport Logging = require(\"./Logging\");\nimport { IJsonConfig } from \"../Declarations/Interfaces\";\nimport { DistributedTracingModes } from \"../applicationinsights\";\nimport { IDisabledExtendedMetrics } from \"../AutoCollection/NativePerformance\";\n\nconst ENV_CONFIGURATION_FILE = \"APPLICATIONINSIGHTS_CONFIGURATION_FILE\";\n// Azure Connection String\nconst ENV_connectionString = \"APPLICATIONINSIGHTS_CONNECTION_STRING\";\n// Instrumentation Key\nconst ENV_azurePrefix = \"APPSETTING_\"; // Azure adds this prefix to all environment variables\nconst ENV_instrumentationKey = \"APPINSIGHTS_INSTRUMENTATIONKEY\";\nconst ENV_legacyInstrumentationKey = \"APPINSIGHTS_INSTRUMENTATION_KEY\"\n// Native Metrics Opt Outs\nconst ENV_nativeMetricsDisablers = \"APPLICATION_INSIGHTS_DISABLE_EXTENDED_METRIC\";\nconst ENV_nativeMetricsDisableAll = \"APPLICATION_INSIGHTS_DISABLE_ALL_EXTENDED_METRICS\"\nconst ENV_http_proxy = \"http_proxy\";\nconst ENV_https_proxy = \"https_proxy\";\nconst ENV_noDiagnosticChannel = \"APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL\"\nconst ENV_noStatsbeat = \"APPLICATION_INSIGHTS_NO_STATSBEAT\";\nconst ENV_noHttpAgentKeepAlive = \"APPLICATION_INSIGHTS_NO_HTTP_AGENT_KEEP_ALIVE\";\nconst ENV_noPatchModules = \"APPLICATION_INSIGHTS_NO_PATCH_MODULES\";\nconst ENV_webInstrumentationEnable = \"APPLICATIONINSIGHTS_WEB_INSTRUMENTATION_ENABLED\";\nconst ENV_webInstrumentation_connectionString = \"APPLICATIONINSIGHTS_WEB_INSTRUMENTATION_CONNECTION_STRING\";\nconst ENV_webInstrumentation_source = \"APPLICATIONINSIGHTS_WEB_INSTRUMENTATION_SOURCE\";\n\n// Old web instrumentation env variables are to be deprecated\n// Those env variables will NOT be exposed in doc after version 2.3.5\nconst ENV_webSnippetEnable = \"APPLICATIONINSIGHTS_WEB_SNIPPET_ENABLED\";\nconst ENV_webSnippet_connectionString = \"APPLICATIONINSIGHTS_WEB_SNIPPET_CONNECTION_STRING\";\n\nexport class JsonConfig implements IJsonConfig {\n    private static _instance: JsonConfig;\n\n    public connectionString: string;\n    public instrumentationKey: string;\n    public endpointUrl: string;\n    public maxBatchSize: number;\n    public maxBatchIntervalMs: number;\n    public disableAppInsights: boolean;\n    public samplingPercentage: number;\n    public correlationIdRetryIntervalMs: number;\n    public correlationHeaderExcludedDomains: string[];\n    public proxyHttpUrl: string;\n    public proxyHttpsUrl: string;\n    public ignoreLegacyHeaders: boolean;\n    public distributedTracingMode: DistributedTracingModes;\n    public enableAutoCollectExternalLoggers: boolean;\n    public enableAutoCollectConsole: boolean;\n    public enableAutoCollectExceptions: boolean;\n    public enableAutoCollectPerformance: boolean;\n    public enableAutoCollectExtendedMetrics: boolean | IDisabledExtendedMetrics;\n    public enableAutoCollectPreAggregatedMetrics: boolean;\n    public enableAutoCollectHeartbeat: boolean;\n    public enableAutoCollectRequests: boolean;\n    public enableAutoCollectDependencies: boolean;\n    public enableAutoDependencyCorrelation: boolean;\n    public enableAutoCollectIncomingRequestAzureFunctions: boolean;\n    public enableUseAsyncHooks: boolean;\n    public enableUseDiskRetryCaching: boolean;\n    public enableResendInterval: number;\n    public enableMaxBytesOnDisk: number;\n    public enableInternalDebugLogging: boolean;\n    public enableInternalWarningLogging: boolean;\n    public enableSendLiveMetrics: boolean;\n    public disableAllExtendedMetrics: boolean;\n    public extendedMetricDisablers: string;\n    public disableStatsbeat: boolean;\n    public noDiagnosticChannel: boolean;\n    public noPatchModules: string;\n    public noHttpAgentKeepAlive: boolean;\n    public quickPulseHost: string;\n    public enableWebInstrumentation: boolean;\n    public webInstrumentationConnectionString: string;\n    public webInstrumentationConfig: any;\n    public webInstrumentationSrc: string;\n\n    // the following features are to be deprecated\n    // Those env variables will NOT be exposed in doc after version 2.3.5\n    public enableAutoWebSnippetInjection: boolean;\n    public webSnippetConnectionString: string;\n\n    static getInstance() {\n        if (!JsonConfig._instance) {\n            JsonConfig._instance = new JsonConfig();\n        }\n        return JsonConfig._instance;\n    }\n\n    constructor() {\n        // Load env variables first\n        this.connectionString = process.env[ENV_connectionString];\n        this.instrumentationKey = process.env[ENV_instrumentationKey]\n            || process.env[ENV_azurePrefix + ENV_instrumentationKey]\n            || process.env[ENV_legacyInstrumentationKey]\n            || process.env[ENV_azurePrefix + ENV_legacyInstrumentationKey];\n\n        if (!this.connectionString && this.instrumentationKey) {\n            Logging.warn(\"APPINSIGHTS_INSTRUMENTATIONKEY is in path of deprecation, please use APPLICATIONINSIGHTS_CONNECTION_STRING env variable to setup the SDK.\");\n        }\n        this.disableAllExtendedMetrics = !!process.env[ENV_nativeMetricsDisableAll];\n        this.extendedMetricDisablers = process.env[ENV_nativeMetricsDisablers];\n        this.proxyHttpUrl = process.env[ENV_http_proxy];\n        this.proxyHttpsUrl = process.env[ENV_https_proxy];\n        this.noDiagnosticChannel = !!process.env[ENV_noDiagnosticChannel];\n        this.disableStatsbeat = !!process.env[ENV_noStatsbeat];\n        this.noHttpAgentKeepAlive = !!process.env[ENV_noHttpAgentKeepAlive];\n        this.noPatchModules = process.env[ENV_noPatchModules] || \"\";\n        this.enableWebInstrumentation = !!process.env[ENV_webInstrumentationEnable] || !!process.env[ENV_webSnippetEnable];\n        this.webInstrumentationSrc = process.env[ENV_webInstrumentation_source] || \"\";\n        this.webInstrumentationConnectionString = process.env[ENV_webInstrumentation_connectionString] || process.env[ENV_webSnippet_connectionString] || \"\";\n        this.enableAutoWebSnippetInjection = this.enableWebInstrumentation;\n        this.webSnippetConnectionString = this.webInstrumentationConnectionString;\n        this._loadJsonFile();\n    }\n\n    private _loadJsonFile() {\n        let configFileName = \"applicationinsights.json\";\n        let rootPath = path.join(__dirname, \"../../\"); // Root of applicationinsights folder (__dirname = ../out/Library)\n        let tempDir = path.join(rootPath, configFileName); // default\n        let configFile = process.env[ENV_CONFIGURATION_FILE];\n        if (configFile) {\n            if (path.isAbsolute(configFile)) {\n                tempDir = configFile;\n            }\n            else {\n                tempDir = path.join(rootPath, configFile);// Relative path to applicationinsights folder\n            }\n        }\n        try {\n            const jsonConfig: IJsonConfig = JSON.parse(fs.readFileSync(tempDir, \"utf8\"));\n            if (jsonConfig.disableStatsbeat != undefined) {\n                this.disableStatsbeat = jsonConfig.disableStatsbeat;\n            }\n            if (jsonConfig.disableAllExtendedMetrics != undefined) {\n                this.disableAllExtendedMetrics = jsonConfig.disableStatsbeat;\n            }\n            if (jsonConfig.noDiagnosticChannel != undefined) {\n                this.noDiagnosticChannel = jsonConfig.noDiagnosticChannel;\n            }\n            if (jsonConfig.noHttpAgentKeepAlive != undefined) {\n                this.noHttpAgentKeepAlive = jsonConfig.noHttpAgentKeepAlive;\n            }\n            if (jsonConfig.connectionString != undefined) {\n                this.connectionString = jsonConfig.connectionString;\n            }\n            if (jsonConfig.extendedMetricDisablers != undefined) {\n                this.extendedMetricDisablers = jsonConfig.extendedMetricDisablers;\n            }\n            if (jsonConfig.noDiagnosticChannel != undefined) {\n                this.noDiagnosticChannel = jsonConfig.noDiagnosticChannel;\n            }\n            if (jsonConfig.proxyHttpUrl != undefined) {\n                this.proxyHttpUrl = jsonConfig.proxyHttpUrl;\n            }\n            if (jsonConfig.proxyHttpsUrl != undefined) {\n                this.proxyHttpsUrl = jsonConfig.proxyHttpsUrl;\n            }\n            if (jsonConfig.proxyHttpsUrl != undefined) {\n                this.proxyHttpsUrl = jsonConfig.proxyHttpsUrl;\n            }\n            if (jsonConfig.noPatchModules != undefined) {\n                this.noPatchModules = jsonConfig.noPatchModules;\n            }\n            if (jsonConfig.enableAutoWebSnippetInjection != undefined) {\n                this.enableWebInstrumentation = jsonConfig.enableAutoWebSnippetInjection;\n                this.enableAutoWebSnippetInjection = this.enableWebInstrumentation;\n            }\n            if (jsonConfig.enableWebInstrumentation != undefined) {\n                this.enableWebInstrumentation = jsonConfig.enableWebInstrumentation;\n                this.enableAutoWebSnippetInjection = this.enableWebInstrumentation;\n            }\n            if (jsonConfig.webSnippetConnectionString != undefined) {\n                this.webInstrumentationConnectionString = jsonConfig.webSnippetConnectionString;\n                this.webSnippetConnectionString = this.webInstrumentationConnectionString;\n            }\n            if (jsonConfig.webInstrumentationConnectionString != undefined) {\n                this.webInstrumentationConnectionString = jsonConfig.webInstrumentationConnectionString;\n                this.webSnippetConnectionString = this.webInstrumentationConnectionString;\n            }\n            if (jsonConfig.webInstrumentationConfig != undefined) {\n                this.webInstrumentationConfig = jsonConfig.webInstrumentationConfig;\n            }\n            if (jsonConfig.webInstrumentationSrc != undefined) {\n                this.webInstrumentationSrc = jsonConfig.webInstrumentationSrc;\n            }\n\n            this.endpointUrl = jsonConfig.endpointUrl;\n            this.maxBatchSize = jsonConfig.maxBatchSize;\n            this.maxBatchIntervalMs = jsonConfig.maxBatchIntervalMs;\n            this.disableAppInsights = jsonConfig.disableAppInsights;\n            this.samplingPercentage = jsonConfig.samplingPercentage;\n            this.correlationIdRetryIntervalMs = jsonConfig.correlationIdRetryIntervalMs;\n            this.correlationHeaderExcludedDomains = jsonConfig.correlationHeaderExcludedDomains;\n            this.ignoreLegacyHeaders = jsonConfig.ignoreLegacyHeaders;\n            this.distributedTracingMode = jsonConfig.distributedTracingMode;\n            this.enableAutoCollectExternalLoggers = jsonConfig.enableAutoCollectExternalLoggers;\n            this.enableAutoCollectConsole = jsonConfig.enableAutoCollectConsole;\n            this.enableAutoCollectExceptions = jsonConfig.enableAutoCollectExceptions;\n            this.enableAutoCollectPerformance = jsonConfig.enableAutoCollectPerformance;\n            this.enableAutoCollectExtendedMetrics = jsonConfig.enableAutoCollectExtendedMetrics;\n            this.enableAutoCollectPreAggregatedMetrics = jsonConfig.enableAutoCollectPreAggregatedMetrics;\n            this.enableAutoCollectHeartbeat = jsonConfig.enableAutoCollectHeartbeat;\n            this.enableAutoCollectRequests = jsonConfig.enableAutoCollectRequests;\n            this.enableAutoCollectDependencies = jsonConfig.enableAutoCollectDependencies;\n            this.enableAutoDependencyCorrelation = jsonConfig.enableAutoDependencyCorrelation;\n            this.enableAutoCollectIncomingRequestAzureFunctions = jsonConfig.enableAutoCollectIncomingRequestAzureFunctions;\n            this.enableUseAsyncHooks = jsonConfig.enableUseAsyncHooks;\n            this.enableUseDiskRetryCaching = jsonConfig.enableUseDiskRetryCaching;\n            this.enableResendInterval = jsonConfig.enableResendInterval;\n            this.enableMaxBytesOnDisk = jsonConfig.enableMaxBytesOnDisk;\n            this.enableInternalDebugLogging = jsonConfig.enableInternalDebugLogging;\n            this.enableInternalWarningLogging = jsonConfig.enableInternalWarningLogging;\n            this.enableSendLiveMetrics = jsonConfig.enableSendLiveMetrics;\n            this.quickPulseHost = jsonConfig.quickPulseHost;\n        }\n        catch (err) {\n            Logging.info(\"Missing or invalid JSON config file: \", err);\n        }\n    }\n}\n"]}