{"version":3,"file":"DependencyTelemetry.js","sourceRoot":"","sources":["../../../../Declarations/Contracts/TelemetryTypes/DependencyTelemetry.ts"],"names":[],"mappings":"","sourcesContent":["import { Telemetry }  from \"./Telemetry\";\n\n/**\n * Telemetry about the call to remote component\n */\nexport interface DependencyTelemetry extends Telemetry {\n    /**\n     * Type name of the telemetry, such as HTTP of SQL\n     */\n    dependencyTypeName: string;\n\n    /**\n     * Remote component general target information\n     * If left empty, this will be prepopulated with an extracted hostname from the data field, if it is a url.\n     * This prepopulation happens when calling `trackDependency`. Use `track` directly to avoid this behavior.\n     */\n    target?: string;\n\n    /**\n     * Remote call name\n     */\n    name: string;\n\n    /**\n     * Remote call data. This is the most detailed information about the call, such as full URL or SQL statement\n     */\n    data: string;\n\n    /**\n     * Remote call duration in ms\n     */\n    duration: number;\n\n    /**\n     * Result code returned form the remote component. This is domain specific and can be HTTP status code or SQL result code\n     */\n    resultCode: string | number;\n\n    /**\n     * True if remote call was successful, false otherwise\n     */\n    success: boolean;\n}"]}