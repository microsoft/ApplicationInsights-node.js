{"version":3,"file":"TelemetryType.js","sourceRoot":"","sources":["../../../../Declarations/Contracts/TelemetryTypes/TelemetryType.ts"],"names":[],"mappings":";;;AAWA;;;GAGG;AACH,SAAgB,uBAAuB,CAAC,IAAmB;IACvD,QAAO,IAAI,EAAE;QACT,KAAK,aAAa,CAAC,KAAK;YACpB,OAAO,WAAW,CAAC;QACvB,KAAK,aAAa,CAAC,SAAS;YACxB,OAAO,eAAe,CAAC;QAC3B,KAAK,aAAa,CAAC,KAAK;YACpB,OAAO,aAAa,CAAC;QACzB,KAAK,aAAa,CAAC,MAAM;YACrB,OAAO,YAAY,CAAC;QACxB,KAAK,aAAa,CAAC,OAAO;YACtB,OAAO,aAAa,CAAC;QACzB,KAAK,aAAa,CAAC,UAAU;YACzB,OAAO,sBAAsB,CAAC;QAClC,KAAK,aAAa,CAAC,YAAY;YAC3B,OAAO,kBAAkB,CAAC;QAC9B,KAAK,aAAa,CAAC,QAAQ;YACvB,OAAO,cAAc,CAAC;KAC7B;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AApBD,0DAoBC;AAED;;;GAGG;AACH,SAAgB,uBAAuB,CAAC,QAA6B;IACjE,QAAO,QAAQ,EAAE;QACb,KAAK,WAAW;YACZ,OAAO,aAAa,CAAC,KAAK,CAAC;QAC/B,KAAK,eAAe;YAChB,OAAO,aAAa,CAAC,SAAS,CAAC;QACnC,KAAK,aAAa;YACd,OAAO,aAAa,CAAC,KAAK,CAAC;QAC/B,KAAK,YAAY;YACb,OAAO,aAAa,CAAC,MAAM,CAAC;QAChC,KAAK,aAAa;YACd,OAAO,aAAa,CAAC,OAAO,CAAC;QACjC,KAAK,sBAAsB;YACvB,OAAO,aAAa,CAAC,UAAU,CAAC;QACpC,KAAK,kBAAkB;YACnB,OAAO,aAAa,CAAC,YAAY,CAAC;QACtC,KAAK,cAAc;YACf,OAAO,aAAa,CAAC,QAAQ,CAAC;KACrC;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AApBD,0DAoBC;AAEY,QAAA,mBAAmB,GAAyC;IACrE,KAAK,EAAE,WAAW;IAClB,SAAS,EAAE,eAAe;IAC1B,KAAK,EAAE,aAAa;IACpB,MAAM,EAAE,YAAY;IACpB,OAAO,EAAE,aAAa;IACtB,UAAU,EAAE,sBAAsB;IAClC,YAAY,EAAE,kBAAkB;IAChC,QAAQ,EAAE,cAAc;CAC3B,CAAA;AAED;;GAEG;AACH,IAAY,aASX;AATD,WAAY,aAAa;IACrB,mDAAK,CAAA;IACL,2DAAS,CAAA;IACT,mDAAK,CAAA;IACL,qDAAM,CAAA;IACN,uDAAO,CAAA;IACP,6DAAU,CAAA;IACV,iEAAY,CAAA;IACZ,yDAAQ,CAAA;AACZ,CAAC,EATW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QASxB","sourcesContent":["export type TelemetryTypeKeys = \"Event\" | \"Exception\" | \"Trace\" | \"Metric\" | \"Request\" | \"Dependency\" | \"Availability\" | \"PageView\";\nexport type TelemetryTypeValues =\n    | \"EventData\"\n    | \"ExceptionData\"\n    | \"MessageData\"\n    | \"MetricData\"\n    | \"RequestData\"\n    | \"RemoteDependencyData\"\n    | \"AvailabilityData\"\n    | \"PageViewData\";\n\n/**\n * Converts the user-friendly enumeration TelemetryType to the underlying schema baseType value\n * @param type Type to convert to BaseData string\n */\nexport function telemetryTypeToBaseType(type: TelemetryType): TelemetryTypeValues {\n    switch(type) {\n        case TelemetryType.Event:\n            return \"EventData\";\n        case TelemetryType.Exception:\n            return \"ExceptionData\";\n        case TelemetryType.Trace:\n            return \"MessageData\";\n        case TelemetryType.Metric:\n            return \"MetricData\";\n        case TelemetryType.Request:\n            return \"RequestData\";\n        case TelemetryType.Dependency:\n            return \"RemoteDependencyData\";\n        case TelemetryType.Availability:\n            return \"AvailabilityData\";\n        case TelemetryType.PageView:\n            return \"PageViewData\";\n    }\n    return undefined;\n}\n\n/**\n * Converts the schema baseType value to the user-friendly enumeration TelemetryType\n * @param baseType BaseData string to convert to TelemetryType\n */\nexport function baseTypeToTelemetryType(baseType: TelemetryTypeValues): TelemetryType {\n    switch(baseType) {\n        case \"EventData\":\n            return TelemetryType.Event;\n        case \"ExceptionData\":\n            return TelemetryType.Exception;\n        case \"MessageData\":\n            return TelemetryType.Trace;\n        case \"MetricData\":\n            return TelemetryType.Metric;\n        case \"RequestData\":\n            return TelemetryType.Request;\n        case \"RemoteDependencyData\":\n            return TelemetryType.Dependency;\n        case \"AvailabilityData\":\n            return TelemetryType.Availability;\n        case \"PageViewData\":\n            return TelemetryType.PageView;\n    }\n    return undefined;\n}\n\nexport const TelemetryTypeString: {[key: string]: TelemetryTypeValues} = {\n    Event: \"EventData\",\n    Exception: \"ExceptionData\",\n    Trace: \"MessageData\",\n    Metric: \"MetricData\",\n    Request: \"RequestData\",\n    Dependency: \"RemoteDependencyData\",\n    Availability: \"AvailabilityData\",\n    PageView: \"PageViewData\"\n}\n\n/**\n * Telemetry types supported by this SDK\n */\nexport enum TelemetryType {\n    Event,\n    Exception,\n    Trace,\n    Metric,\n    Request,\n    Dependency,\n    Availability,\n    PageView\n}\n\nexport interface Identified {\n    id?: string;\n}\n"]}