{"version":3,"file":"ExceptionDetails.js","sourceRoot":"","sources":["../../../../Declarations/Contracts/Generated/ExceptionDetails.ts"],"names":[],"mappings":"AAEA,YAAY,CAAC;AAET;;GAEG;AACH;IAsCI;QAEI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IACL,uBAAC;AAAD,CAAC,AA3CD,IA2CC;AACL,iBAAS,gBAAgB,CAAC","sourcesContent":["// THIS FILE WAS AUTOGENERATED\nimport StackFrame = require(\"./StackFrame\");\n\"use strict\";\n    \n    /**\n     * Exception details of the exception in a chain.\n     */\n    class ExceptionDetails\n    {\n        \n        /**\n         * In case exception is nested (outer exception contains inner one), the id and outerId properties are used to represent the nesting.\n         */\n        public id: number;\n        \n        /**\n         * The value of outerId is a reference to an element in ExceptionDetails that represents the outer exception\n         */\n        public outerId: number;\n        \n        /**\n         * Exception type name.\n         */\n        public typeName: string;\n        \n        /**\n         * Exception message.\n         */\n        public message: string;\n        \n        /**\n         * Indicates if full exception stack is provided in the exception. The stack may be trimmed, such as in the case of a StackOverflow exception.\n         */\n        public hasFullStack: boolean;\n        \n        /**\n         * Text describing the stack. Either stack or parsedStack should have a value.\n         */\n        public stack: string;\n        \n        /**\n         * List of stack frames. Either stack or parsedStack should have a value.\n         */\n        public parsedStack: StackFrame[];\n        \n        constructor()\n        {\n            this.hasFullStack = true;\n            this.parsedStack = [];\n        }\n    }\nexport = ExceptionDetails;\n"]}