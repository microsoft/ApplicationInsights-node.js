{"version":3,"file":"EventData.js","sourceRoot":"","sources":["../../../../Declarations/Contracts/Generated/EventData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,8BAA8B;AAC9B,iCAAoC;AACpC,YAAY,CAAC;AAET;;GAEG;AACH;IAAwB,6BAAM;IAuB1B;QAAA,YAEI,iBAAO,SAKV;QAHG,KAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;;IAC3B,CAAC;IACL,gBAAC;AAAD,CAAC,AA/BD,CAAwB,MAAM,GA+B7B;AACL,iBAAS,SAAS,CAAC","sourcesContent":["// THIS FILE WAS AUTOGENERATED\nimport Domain = require(\"./Domain\");\n\"use strict\";\n    \n    /**\n     * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\n     */\n    class EventData extends Domain\n    {\n        \n        /**\n         * Schema version\n         */\n        public ver: number;\n        \n        /**\n         * Event name. Keep it low cardinality to allow proper grouping and useful metrics.\n         */\n        public name: string;\n        \n        /**\n         * Collection of custom properties.\n         */\n        public properties: any;\n        \n        /**\n         * Collection of custom measurements.\n         */\n        public measurements: any;\n        \n        constructor()\n        {\n            super();\n            \n            this.ver = 2;\n            this.properties = {};\n            this.measurements = {};\n        }\n    }\nexport = EventData;\n"]}