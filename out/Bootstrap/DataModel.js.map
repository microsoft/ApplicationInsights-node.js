{"version":3,"file":"DataModel.js","sourceRoot":"","sources":["../../Bootstrap/DataModel.ts"],"names":[],"mappings":";;;AAKa,QAAA,mBAAmB,GAAG;IAC/B,kBAAkB,EAAE,MAAM;IAC1B,WAAW,EAAE,MAAM;IACnB,aAAa,EAAE,MAAM;IACrB,oBAAoB,EAAE,MAAM;IAC5B,cAAc,EAAE,MAAM;IACtB,YAAY,EAAE,MAAM;IACpB,cAAc,EAAE,MAAM;CACzB,CAAA","sourcesContent":["export interface AgentLogger {\n    log(message?: any, ...optional: any[]): void;\n    error(message?: any, ...optional: any[]): void;\n}\n\nexport const DiagnosticMessageId = {\n    \"attachSuccessful\": \"3000\",\n    \"sdkExists\": \"3001\",\n    \"missingIkey\": \"3002\",\n    \"setupAlreadyCalled\": \"3003\",\n    \"prefixFailed\": \"3004\",\n    \"aadEnabled\": \"3005\",\n    \"unknownError\": \"3006\"\n}\n\nexport const enum SeverityLevel {\n    ERROR = \"ERROR\",\n    WARN = \"WARN\",\n    INFO = \"INFO\"\n}\n\nexport interface DiagnosticLog {\n    /**\n     * UTC\n     */\n    time?: string;\n\n    /**\n     * Log severity, INFO, WARN, ERROR\n     */\n    level?: SeverityLevel;\n\n    /**\n     * The logger writing this message. Usually the fully-qualified class or package name\n     */\n    logger?: string;\n\n    /**\n     * The log message\n     */\n    message: string;\n\n    /**\n     * Exception (as string)\n     */\n    exception?: string\n\n    /**\n     * Any custom data related to the error/application/operation. Each field should have a string value\n     * Examples: operation, siteName, ikey, extensionVersion, sdkVersion, subscriptionId\n     */\n    properties: { [key: string]: string };\n}\n"]}