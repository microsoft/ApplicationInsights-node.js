{"version":3,"file":"StatusLogger.js","sourceRoot":"","sources":["../../Bootstrap/StatusLogger.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AAEb,uBAAyB;AACzB,2BAA6B;AAG7B,2CAAmD;AACnD,uDAA6E;AAa7E;IAaI,sBAAmB,OAAwC,EAAE,kBAAsC;QAAhF,wBAAA,EAAA,iBAAwC;QAAE,mCAAA,EAAA,8BAAsC;QAAhF,YAAO,GAAP,OAAO,CAAiC;QACvD,YAAY,CAAC,cAAc,CAAC,IAAI,GAAG,kBAAkB,CAAC;IAC1D,CAAC;IAEM,gCAAS,GAAhB,UAAiB,IAAoB,EAAE,EAAyB;QAC5D,IAAI,OAAO,EAAE,KAAK,UAAU,IAAI,IAAI,CAAC,OAAO,YAAY,uBAAU,EAAE;YAChE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IArBsB,8BAAiB,GAAW,IAAI,CAAC,IAAI,CAAC,oBAAO,EAAE,QAAQ,CAAC,CAAC;IACzD,8BAAiB,GAAW,YAAU,EAAE,CAAC,QAAQ,EAAE,SAAI,OAAO,CAAC,GAAG,UAAO,CAAC;IAC1E,2BAAc,GAAmB;QACpD,4BAA4B,EAAE,KAAK;QACnC,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,4CAAgC;QAC5C,WAAW,EAAE,EAAE,CAAC,QAAQ,EAAE;QAC1B,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;KAC3B,CAAA;IAYL,mBAAC;CAAA,AAvBD,IAuBC;AAvBY,oCAAY","sourcesContent":["\"use strict\";\n\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport * as DataModel from \"./DataModel\";\nimport { FileWriter, homedir } from \"./FileWriter\";\nimport { APPLICATION_INSIGHTS_SDK_VERSION } from \"../Declarations/Constants\";\n\nexport interface StatusContract {\n    AgentInitializedSuccessfully: boolean;\n    Reason?: string;\n    SDKPresent: boolean;\n    AppType: string;\n    MachineName: string;\n    PID: string;\n    SdkVersion: string;\n    Ikey: string;\n}\n\nexport class StatusLogger {\n    public static readonly DEFAULT_FILE_PATH: string = path.join(homedir, \"status\");\n    public static readonly DEFAULT_FILE_NAME: string = `status_${os.hostname()}_${process.pid}.json`;\n    public static readonly DEFAULT_STATUS: StatusContract = {\n        AgentInitializedSuccessfully: false,\n        SDKPresent: false,\n        Ikey: \"unknown\",\n        AppType: \"node.js\",\n        SdkVersion: APPLICATION_INSIGHTS_SDK_VERSION,\n        MachineName: os.hostname(),\n        PID: String(process.pid)\n    }\n\n    constructor(public _writer: DataModel.AgentLogger = console, instrumentationKey: string = \"unknown\") {\n        StatusLogger.DEFAULT_STATUS.Ikey = instrumentationKey;\n    }\n\n    public logStatus(data: StatusContract, cb?: (err: Error) => void) {\n        if (typeof cb === \"function\" && this._writer instanceof FileWriter) {\n            this._writer.callback = cb;\n        }\n        this._writer.log(data);\n    }\n}\n"]}